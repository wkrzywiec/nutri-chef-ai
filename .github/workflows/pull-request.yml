name: Pull Request Workflow

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build_meal-planner:
    name: meal-planner - Build & Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: meal-planner
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      # todo - fix it
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build
      - name: Run tests
        run: ./gradlew test


  build_nutri-chef-ai:
    name: nutri-chef-ai - Build & Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: nutri-chef-ai
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      # todo - fix it
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build
      - name: Run tests
        run: ./gradlew test

  ui:
    name: build (mankkoo-ui)
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: ui
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3

      - name: Set up NodeJS ‚ú®
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install package dependencies
        run: npm install

        # - name: Check linting and formatting
        #   # Custom script for checking the linting and formatting being in place
        #   run: npm run lint

      - name: Create build üèóÔ∏è
        run: npm run build